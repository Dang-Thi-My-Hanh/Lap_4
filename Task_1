# Lap_4
// Task 1.1: Implement selection sort algorithm to sort an array of integers (using 
iterative or recursive approach).
private static void swapSelectionSort(int[] b, int i, int j) {
		a = b[i+1];
		b[i+1]= b[i];
		b[i]=a;		
	}
 public static int[] selectionSort( int[] array) {
		for(int i=0; i< array.length-1; i++) {
			for(int j=i+1; j< array.length;j++) {
				if(array[i]< array[i+1]) {
					swapSelectionSort(array, i, j);
				}
			}
		}
		return array;
}
// Task 1.2: Implement bubble sort algorithm to sort an array of integers (using 
iterative or recursive approach).
public static void bubbleSort(int[] array) {
		for (int k=0; k < array.length - 1; k++) {
			for(int i=0; i< array.length -1-k;i++) {
				if (array[i] < array[i+1]) {
						a = array[i+1];
						array[i+1]= array[i];
						array[i]=a;				
				}
			}	
		}
  }
  // Task 1.3: Implement insertion sort algorithm to sort an array of integers (using 
iterative or recursive approach)
public static void insertionSort(int[] array, int n) {
		if( n <= 1) {
			return;}
		insertionSort(array, n -1 );
			int last = array[n-1];
			int j = n - 2;
		while( j>=0 && array[j] < last) {
			array[j+1 ] = array[j ]; 
			j--;
		}
		array[j+1] = last;
	}
		
}
